name: "Int Deployment"

concurrency: 1

on:
  workflow_run:
    workflows: ["Dev Deployment"]
    types:
      - completed
      
env:
  ENV: int

jobs:
  deploy:
    name: "Deploy to Int"
    runs-on: ubuntu-latest
    environment: int
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.event == 'push' &&
      github.event.workflow_run.head_branch == 'main'

    steps:
      # Check out this repo
      - uses: actions/checkout@v4

      # Login to Azure Portal Using Service Principal
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_INT_CREDENTIALS }}

      # Download the Databricks CLI
      - uses: databricks/setup-cli@main

      # Deploy the bundle to the "stg" target
      - name: Deploy Databricks Bundle
        run: |
          databricks bundle validate -t ${{ env.ENV }}
          databricks bundle deploy -t ${{ env.ENV }}
        working-directory: .
        env:
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}

     # Find all test workflows starting with "Test_", remove .yml extension, and save them as a comma-separated list
      - name: Set Test Flows
        id: set_test_flows
        run: |
          TEST_FLOWS=$(find . -name "Test_*" -exec basename {} .yml \; | tr '\n' ',' | sed 's/,$//')
          echo "test_flows=$TEST_FLOWS" >> $GITHUB_ENV

      - name: Run databricks test workflows
        run: |
          IFS=',' read -ra FLOWS <<< "${{ env.test_flows }}"
          for flow in "${FLOWS[@]}"; do
            echo "Running test flow: $flow"
            databricks bundle run -t ${{ env.ENV }} "$flow"
          done
        env:
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}