name: "Dev Deployment"

on:
  workflow_run:
    workflows: ["Sandbox Deployment"]
    types:
      - completed

env:
  ENV: dev

jobs:
  deploy:
    name: "Deploy bundle"
    runs-on: ubuntu-latest
    environment: development
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main

      - name: Azure Login Using Service Principal
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_DEV_CREDENTIALS }}

      - name: Deploy Databricks Bundle
        run: |
          databricks bundle validate -t ${{ env.ENV }}
          databricks bundle deploy -t ${{ env.ENV }}
        working-directory: .
        env:
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}

      - name: Set Test Flows
        run: |
          TEST_FLOWS=$(find . -name "*_test.job.yml" -exec basename {} .job.yml \; | tr '\n' ',' | sed 's/,$//')
          echo "Test flows found: $TEST_FLOWS"
          echo "test_flows=$TEST_FLOWS" >> $GITHUB_ENV
    
      - name: Run databricks test workflows
        run: |
          echo "Test flows to run: ${{ env.test_flows }}"

          # Iterate over each test flow and run with `databricks bundle run`
          IFS=',' read -ra FLOWS <<< "${{ env.test_flows }}"
          for flow in "${FLOWS[@]}"; do
            if [ -n "$flow" ]; then  # Ensure flow is not empty
              echo "Running test flow: $flow"
              databricks bundle run -t ${{ env.ENV }} "$flow"
            fi
          done
        env:
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}

