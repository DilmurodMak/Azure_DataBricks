name: "Dev Deployment"

concurrency: 1

on:
    pull_request:
      types:
        - opened
        - synchronize
      branches:
        - main
    
env:
    BUNDLE_ENV: dev

jobs:
  # Used by the "pipeline_update" job to deploy the bundle.
  # Bundle validation is automatically performed as part of this deployment.
  # If validation fails, this workflow fails.
  deploy:
    name: "Deploy bundle"
    runs-on: ubuntu-latest
    environment: development

    steps:
      # Check out this repo, so that this workflow can access it.
      - uses: actions/checkout@v4

      # Login to Azure Portal Using Service Principal
      - name: Azure Login action
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      # Download the Databricks CLI.
      # See https://github.com/databricks/setup-cli
      - uses: databricks/setup-cli@main

      # Deploy the bundle to the "dev" target as defined
      # in the bundle's settings file.
      - run: databricks bundle deploy
        working-directory: .
        env:
          DATABRICKS_TOKEN: ${{ secrets.ADB_DEV_TOKEN }}
          DATABRICKS_BUNDLE_ENV: ${{ env.BUNDLE_ENV }}

#   # Validate, deploy, and then run the bundle.
#   pipeline_update:
#     name: "Run pipeline update"
#     runs-on: ubuntu-latest

#     # Run the "deploy" job first.
#     needs:
#       - deploy

#     steps:
#       # Check out this repo, so that this workflow can access it.
#       - uses: actions/checkout@v4

#       # Use the downloaded Databricks CLI.
#       - uses: databricks/setup-cli@main

#       # Run the Databricks workflow named 
#       - run: databricks bundle run ETL_Flow --refresh-all
#         working-directory: .
#         env:
#           DATABRICKS_TOKEN: ${{ secrets.SP_TOKEN }}
#           DATABRICKS_BUNDLE_ENV: 