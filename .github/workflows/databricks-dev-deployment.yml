name: "Dev Deployment"

on:
  workflow_dispatch:

env:
  ENV: dev

jobs:
  prepare-changes:
    name: "Prepare Changes"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Find Changes Since Last Tag
        id: diff
        run: |
          # Ensure we're fetching all history and tags
          git fetch --tags
          
          # Get the latest tag
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $latest_tag"
          
          # Generate a diff between the latest tag and HEAD
          git diff --name-status $latest_tag HEAD > changes.txt

          # Convert diff to JSON format
          echo "[" > changes.json
          cat changes.txt | awk '{
            print "{\"file\":\""$2"\",\"change\":\""$1"\"},"
          }' >> changes.json
          echo "{}]" >> changes.json

          # Export JSON file location for use in the next steps
          echo "diff-json=$(cat changes.json)" >> $GITHUB_ENV
          
        env:
          # Required if you use private repositories
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Changes JSON as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment-changes
          path: changes.json

  deploy:
    name: "Deploy Bundle"
    runs-on: ubuntu-latest
    needs: prepare-changes
    environment: development

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main

      - name: Azure Login Using Service Principal
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_DEV_CREDENTIALS }}

      - name: Show Changes Before Deployment
        run: |
          echo "Changes Detected:"
          cat changes.json

      - name: Deploy Databricks Bundle
        run: |
          databricks bundle validate -t ${{ env.ENV }} -o json
          databricks bundle deploy -t ${{ env.ENV }}
        working-directory: .
        env:
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}

      - name: Set Test Flows
        if: github.event_name == 'push'
        run: task collect-tests

      - name: Run test workflows
        if: github.event_name == 'push'
        run: task run-tests
        env:
          # task file required variables
          test_flows: ${{ env.test_flows }}
          # bundle file required variables
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}
