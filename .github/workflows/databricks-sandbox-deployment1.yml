name: "Sandbox Deployment"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ENV: int

jobs:
  deploy:
    name: "Deploy bundle"
    runs-on: ubuntu-latest
    environment: int

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main

      - name: Azure Login Using Service Principal
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_INT_CREDENTIALS }}

      - name: Deploy Databricks Bundle
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            databricks bundle validate -t ${{ env.ENV }}
          elif [ "${{ github.event_name }}" == "push" ]; then
            databricks bundle deploy -t ${{ env.ENV }}
          fi
        working-directory: .
        env:
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}

      - name: Install Task
        if: github.event_name == 'push'
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set Test Flows
        if: github.event_name == 'push'
        run: task collect-tests

      - name: Run test workflows
        if: github.event_name == 'push'
        run: task run-tests
        env:
          # task file required variables
          test_flows: ${{ env.test_flows }}
          # bundle file required variables
          DATABRICKS_BUNDLE_ENV: ${{ env.ENV }}
          BUNDLE_VAR_ADB_HOST_URL: ${{ vars.ADB_HOST_URL }}
          BUNDLE_VAR_FILE_LANDING_URL: ${{ vars.FILE_LANDING_URL }}